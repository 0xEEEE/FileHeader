{"name":"Fileheader","tagline":"File header plugin for ST2/ST3","body":"==========\r\nFileHeader\r\n==========\r\n\r\nOverview\r\n========\r\n\r\nFileHeader is a plugin for ST2/ST3. It makes it easier to create new file with initial contents. It also can add new header to an existed file or directory.\r\n\r\n:Info: File header manager for Sublime Text 2 and Sublime Text 3.\r\n:Author: Lime YH.Shi\r\n\r\nFeatures\r\n=========\r\n\r\n- Add new file with initial contents.\r\n- Add header to an existed file or directory.\r\n- Batch add header to files in the specified dircetory.\r\n- Auto update file last modified time and last modified by.\r\n- Auto detect file type.\r\n- Powerful template with Jinja2_.\r\n- Custom templates supported.\r\n- Rich languages supported.\r\n- Support both Sublime Text 2 and Sublime Text 3.\r\n\r\nInstallation\r\n============\r\n\r\nPackage Control\r\n---------------\r\n\r\nInstall `Package Control`_. Then **Package Control: Install Package**, look for **FileHeader** and install it.\r\n\r\n.. _Package Control: https://sublime.wbond.net/\r\n\r\nSource Installation\r\n--------------------\r\n\r\nGo to the \"Packages\" directory **(Preferences / Browse Packages)**. Then clone this repository::\r\n\r\n    git clone git@github.com:shiyanhui/FileHeader.git\r\n\r\nOr download zip from Github, and put it in \"Packages\" directory **(Preferences / Browse Packages)**.\r\n\r\nReleases\r\n--------\r\n\r\nSee releases and logs `here <https://github.com/shiyanhui/FileHeader/releases>`_, it's stable.\r\n\r\nUsage\r\n=====\r\n\r\nCreate a new file\r\n-----------------\r\n\r\n- Sidebar menu\r\n\r\n    .. image:: https://raw.github.com/shiyanhui/shiyanhui.github.io/master/images/FileHeader/new-file.gif\r\n\r\n- Shortcuts    \r\n\r\n    The default shortcuts is **super+alt+n** on OS X, **ctrl+alt+n** on Windows and Linux.\r\n\r\n- Context menu\r\n\r\n    Similar to **Sidebar menu**.\r\n\r\nAdd header to an existed file\r\n-----------------------------\r\n\r\n- Sidebar menu\r\n\r\n    .. image:: https://raw.github.com/shiyanhui/shiyanhui.github.io/master/images/FileHeader/add-header.gif\r\n\r\n- Shortcuts\r\n\r\n    The default shortcuts is **super+alt+a** on OS X, **ctrl+alt+a** on Windows and Linux.\r\n\r\n- Context menu\r\n\r\n    Similar to **Sidebar menu**.\r\n    \r\nAdd header to files in the specified directory\r\n----------------------------------------------\r\n\r\n    .. image:: https://raw.github.com/shiyanhui/shiyanhui.github.io/master/images/FileHeader/add-header-dir.gif\r\n\r\nA very important feature of FileHeader is that it can automatically update **last_modified_time** and **last_modified_by** (see options below). Just look this picture, take care of the **@Last modified time:** before save and after save: \r\n\r\n.. image:: https://raw.github.com/shiyanhui/shiyanhui.github.io/master/images/FileHeader/update.gif\r\n\r\n\r\nSettings\r\n========\r\n\r\nThere are three kinds of arguments, **options**, **Default** and kinds of languages variables settings. **options** is the functional setting, **Default** is the default language variables settings. Language variables setting will cover that in **Default**.\r\n\r\n.. code-block:: c++\r\n    \r\n    {\r\n        \"options\": {\r\n            /*\r\n            The datetime format.\r\n\r\n                0: \"%Y-%m-%d %H:%M:%S\"\r\n                1: \"%Y-%m-%d\"\r\n                2: \"%H:%M:%S\"\r\n            */\r\n            \"time_format\": 0,\r\n            /*\r\n            Set your custom template header path here, it is a directory in which \r\n            you write your own header files. The file name should be a language, \r\n            \"Python.tmpl\" for example. \r\n            */\r\n            \"custom_template_header_path\": \"\",\r\n            /*\r\n            Set your custom template body path here, it is a directory in which \r\n            you write your own body files. The file name should be a language, \r\n            \"Python.tmpl\" for example. \r\n\r\n            The tempalte structure is:\r\n\r\n                I am a template\r\n                ---------------\r\n                header\r\n                body\r\n\r\n            */\r\n            \"custom_template_body_path\": \"\",\r\n            /*\r\n            Whether show input panel when you add header. The default file which \r\n            you add header to is the current file you edit.\r\n            */\r\n            \"show_input_panel_when_add_header\": true,\r\n            /*\r\n            Whether open file when you add header to files in the specified \r\n            directory.\r\n            */\r\n            \"open_file_when_add_header_to_directory\": true,\r\n            /*\r\n            Whether enable add header to hidden directory. If false, FileHeader \r\n            won't add header to files under it. \r\n            */\r\n            \"enable_add_header_to_hidden_dir\": false,\r\n            /*\r\n            Whether enable add header to hidden file. If false, FileHeader \r\n            won't add header to it. \r\n            */\r\n            \"enable_add_header_to_hidden_file\": false,\r\n            /*\r\n            FileHeader judges programming language according file suffix.\r\n\r\n            Default programming language if FileHeader judges failed when you\r\n            create new file.\r\n            */\r\n            \"syntax_when_not_match\": \"Text\",\r\n            /*\r\n            FileHeader will judge programming language according to file suffix.\r\n            You can add more file suffix here. Note: language should be one of \r\n            that under **Default**. If FileHeader don't find the suffix,\r\n            FileHeader will set language as **syntax_when_not_match** above.\r\n            */\r\n            \"file_suffix_mapping\":{\r\n                \"as\": \"ActionScript\",\r\n                \"scpt\": \"AppleScript\",\r\n                \"asp\": \"ASP\",\r\n                \"aspx\": \"ASP\",\r\n                \"bat\": \"Batch File\",\r\n                \"c\": \"C\",\r\n                \"cs\": \"C#\",\r\n                \"cpp\": \"C++\",\r\n                \"clj\": \"Clojure\",\r\n                \"css\": \"CSS\",\r\n                \"D\": \"D\",\r\n                \"erl\": \"Erlang\",\r\n                \"go\": \"Go\",\r\n                \"groovy\": \"Groovy\",\r\n                \"hs\": \"Haskell\",\r\n                \"htm\": \"HTML\",\r\n                \"html\": \"HTML\",\r\n                \"java\": \"Java\",\r\n                \"js\": \"JavaScript\",\r\n                \"tex\": \"LaTeX\",\r\n                \"lsp\": \"Lisp\",\r\n                \"lua\": \"Lua\",\r\n                \"md\": \"Markdown\",\r\n                \"mat\": \"Matlab\",\r\n                \"m\": \"Objective-C\",\r\n                \"ml\": \"OCaml\",\r\n                \"p\": \"Pascal\",\r\n                \"pl\": \"Perl\",\r\n                \"php\": \"PHP\",\r\n                \"py\": \"Python\",\r\n                \"R\": \"R\",\r\n                \"rst\": \"RestructuredText\",\r\n                \"rb\": \"Ruby\",\r\n                \"scala\": \"Scala\",\r\n                \"sh\": \"ShellScript\",\r\n                \"sql\": \"SQL\",\r\n                \"tcl\": \"TCL\",\r\n                \"txt\": \"Text\",\r\n                \"xml\": \"XML\"\r\n            }\r\n        } ,\r\n        // The default variables you render.\r\n        \"Default\": {\r\n            /*\r\n            Builtin Variables\r\n            =================\r\n        \r\n            - create_time\r\n\r\n                The file created time. It will be automatically set when you create\r\n                a new file if you use it. \r\n\r\n                Can't be set custom.\r\n\r\n            - author\r\n\r\n                The file creator. \r\n\r\n                FileHeader will set it automatically. If it's in\r\n                a git repository and the `user.name` has been set, `autor` \r\n                will set to `user.name`, otherwise it will be set to current \r\n                system user.\r\n\r\n                Can be set custom.\r\n\r\n            - last_modified_by\r\n\r\n                The file last modified by who? It is specially useful when \r\n                cooperation programming. \r\n\r\n                FileHeader will set it automatically. If it's in\r\n                a git repository and the `user.name` has been set, `autor` \r\n                will set to `user.name`, otherwise it will be set to current \r\n                system logined user. \r\n\r\n                Can be set custom.\r\n\r\n            - last_modified_time\r\n                \r\n                The file last modified time.\r\n\r\n                FileHeader will set it automatically when you save the file.\r\n\r\n                Can't be set custom\r\n            */\r\n\r\n            /*\r\n            Email\r\n            */\r\n            \"email\": \"email@example.com\"\r\n\r\n            // You can add more here......\r\n        },\r\n        /*\r\n        You can set different variables in different languages. It will cover \r\n        that in \"Default\".\r\n        */\r\n        \"ASP\": {},\r\n        \"ActionScript\": {},\r\n        \"AppleScript\": {},\r\n        \"Batch File\": {},\r\n        \"C#\": {},\r\n        \"C++\": {},\r\n        \"CSS\": {},\r\n        \"Clojure\": {},\r\n        \"D\": {},\r\n        \"Diff\": {},\r\n        \"Erlang\": {},\r\n        \"Go\": {},\r\n        \"Graphviz\": {},\r\n        \"Groovy\": {},\r\n        \"HTML\": {},\r\n        \"Haskell\": {},\r\n        \"Java\": {},\r\n        \"JavaScript\": {},\r\n        \"LaTeX\": {},\r\n        \"Lisp\": {},\r\n        \"Lua\": {},\r\n        \"Makefile\": {},\r\n        \"Markdown\": {},\r\n        \"Matlab\": {},\r\n        \"OCaml\": {},\r\n        \"Objective-C\": {},\r\n        \"PHP\": {},\r\n        \"Pascal\": {},\r\n        \"Perl\": {},\r\n        \"Python\": {},\r\n        \"R\": {},\r\n        \"RestructuredText\": {},\r\n        \"Ruby\": {},\r\n        \"SQL\": {},\r\n        \"Scala\": {},\r\n        \"ShellScript\": {},\r\n        \"TCL\": {},\r\n        \"Text\": {},\r\n        \"Textile\": {},\r\n        \"XML\": {},\r\n        \"YAML\": {}\r\n    }\r\n\r\nTemplate\r\n========\r\n\r\nFileHeader use Jinja2_ template, find out how to use it `here <http://jinja.pocoo.org/docs/>`_. \r\n\r\nThe template is made up of **header** and **body**.  You also can write you \r\nown templates. Take the Python template header **Python.tmpl** for example.\r\n\r\n    .. code-block:: ++\r\n\r\n        # -*- coding: utf-8 -*-\r\n        # @Author: {{author}}\r\n        # @Date:   {{create_time}}\r\n        # @Email:  {{email}}\r\n        # @Last modified by:   {{last_modified_by}}\r\n        # @Last Modified time: {{last_modified_time}}\r\n\r\n**{{ }}** is variable, you can set it in setting files. **create_time** will be set when you create a new file using FileHeader, **last_modified_time** and **last_modified_by** will be update every time you save your file.\r\n\r\nYou can define your functions and classes or other contents in your **body** \r\nfile.  Also take Python template body for example.\r\n    \r\n    .. code-block:: python\r\n\r\n        def main():\r\n            pass\r\n\r\n        class MainClass(object):\r\n            pass\r\n\r\n        if __name__ == '__main__':\r\n            pass\r\n\r\n.. _Jinja2: http://jinja.pocoo.org/docs/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}